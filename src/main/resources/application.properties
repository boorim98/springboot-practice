server.address=localhost
server.port=8080

# API 호출시, SQL 문을 콘솔에 출력한다.
spring.jpa.show-sql=true

# DDL 정의시 데이터베이스의 고유 기능을 사용합니다.
# ex) 테이블 생성, 삭제 등
spring.jpa.generate-ddl=true

# MySQL 을 사용할 것.
spring.jpa.database=mysql

# MySQL 설정
spring.datasource.url=jdbc:mysql://localhost:3306/STUDY?useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC
spring.datasource.username=
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# MySQL 상세 지정
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto=update
spring.session.jdbc.initialize-schema: always

#spring.servlet.multipart.max-request-size=1000MB
#spring.servlet.multipart.max-file-size=1000MB
#spring.servlet.multipart.enabled=true

spring.main.allow-bean-definition-overriding=true

#spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:mem:testdb

#spring.datasource.driverClassName=org.h2.Driver

#spring.datasource.username=sa

#spring.datasource.password=
spring.profiles.include=oauth
spring.session.store-type=jdbc

#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.show_sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

